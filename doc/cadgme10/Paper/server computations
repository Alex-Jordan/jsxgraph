---

JSXGraph also includes a math library which provides an interface to some basic algorithms like linear equation and ode
solvers. The speed of JavaScript interpreters in modern web browsers is sufficient for small to medium sized problems
being calculated with pure JavaScript. More complex problems can be handled by JSXGraph by swapping the calculation from
the web browser to the web server. This way even existing software solutions like computer algebra systems or numerical
libraries can be used and integrated in JSXGraph.

To accomplish this, a web development technique called AJAX is used. This technique is usually used to exchange data
with a web server without reloading the whole web page. Unfortunately this comes with a lot of programming overhead
required for every JSXGraph mathlet which requires server side calculations: AJAX invocation, parsing data from JSXGraph
on the web server, formatting the output data on the server and back in the browser one has to parse the results. In
short: a whole communication protocol has to be designed and implemented. To avoid this and save the creators of JSXGraph
based worksheets this repeating and extra work, JSXGraph provides a simple yet powerful server-client-framework.

This framework is Python\footnote{\href{http://python.org/}{http://python.org/}} based on the server side and is
organized in modules. A module is loaded by a simple function call:

\begin{verbatim}
JXG.Server.load('fft');
\end{verbatim}

This sends a request to the server to load the modules fft.py, which in this case provides some methods to calculate
fourier transforms using NumPy\footnote{\href{http://numpy.scipy.org/}{http://numpy.scipy.org/}}. If the module can be
found it is loaded and answers with a list of available methods and data elements which are then integrated in JSXGraph.
From now on, all the methods provided by the module can be used as if they were JavaScript functions.

Another example of a JSXGraph server module is the \emph{exact loci computation}. This module is based on an algorithm
developed by 

---

Notizen:

Codebeispiele? Duerften eher uninteressant sein...

anwendungsbeispiele: loci calculation, fft, aber mehr als screenshots sind auch hier nicht drin
und der sinn von screenshots duerfte bei dem themenbereich eher fragwuerdig sein.



fft aufruf:

JXG.Server.modules.fft.fft(clearSignal, function(data) {
            fftSignal = data.y;
            cut();
            fftBoard.update();
        }, true);


simples ajax beispiel:

xhr = new XMLHttpRequest();
xhr.open("GET", "test.txt", true);
xhr.onreadystatechange = function() {
  if(xhr.readyState == 4) {
    document.getElementById('foo').innerHTML = xhr.responseText;
  }
}
xhr.send(null);
