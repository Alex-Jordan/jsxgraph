/~ --- Token definitions --- ~/

/~ Characters to be ignored ~/
!   ' |\t' ;

/~ Non-associative tokens ~/
    '\('
    '\)'
    '[0-9]+'                        INT
    '[0-9]+\.[0-9]*|[0-9]*\.[0-9]+' FLOAT
    '\_\_[a-zA-Z0-9]+'              PARAM
    '[a-zA-Z]+(\_*[a-zA-Z0-9]+)*'   VAR
    '\&[a-zA-Z]+\;'                 HTML
    '\"[a-zA-Z0-9äüöß\=\.\ ]*\"'    STRING
    '[a-zA-Z]+\[[a-zA-Z]+\]'        COMMAND
    ;

/~ Left-associative tokens, from lowest to highest precedence ~/
<  '\+'
   '\-';

<  '\*'
   '/';

<  '^';

<  '\,';

<  '<='
   '>='
   '=='
   '!='
   '<'
   '>';

<  '!';

<  '\|\|'
   '\&\&';

##

/~ --- Grammar specification --- ~/

p:      e                          [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'end', %1);*]
        ;

e:        '(' e ',' e ')'          [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'coord', %2, %4, element);*] /~ element unabhaengig ~/
        | e '<=' e                 [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'le', %1, %3);*]
        | e '>=' e                 [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'ge', %1, %3);*]
        | e '==' e                 [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'eq', %1, %3);*]
        | e '!=' e                 [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'neq', %1, %3);*]
        | e '<' e                  [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'lt', %1, %3);*]
        | e '>' e                  [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'gt', %1, %3);*]
        | e '+' e                  [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'add', %1, %3);*]
        | e '-' e                  [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'sub', %1, %3);*]
		| '!' e                    [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'neg', %2);*]
		| e '^' e                  [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'pow', %1, %3);*]
		| e '||' e                 [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'or', %1, %3);*]
		| e '&&' e                 [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'and', %1, %3);*]
        | e '*' e                  [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'mul', %1, %3);*]
        | e '/' e                  [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'div', %1, %3);*]
        | '-' e &'*'               [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'negmult', %2);*]
        | '(' e ')'                [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'bra', %2);*]
        | STRING '+' e             [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'string', %1, %3);*]
        | INT                      [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'int', %1);*]
        | FLOAT                    [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'float', %1);*]
        | PARAM                    [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'param', %1);*]
        | HTML                     [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'html', %1);*]
        | STRING                   [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'string', %1);*]
        | COMMAND                  [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'command', %1);*]
        | VAR '(' e ')'            [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'var', %1, %3);*]
        | VAR                      [*%% = JXG.GeogebraReader.ggbAct(tree, board, 'var', %1);*]
        ;